{"ast":null,"code":"var _jsxFileName = \"/home/mindbowser/Firebase-Demo/firebase-demo/React-firestore-chat-app/src/pages/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { signInWithEmailAndPassword } from \"firebase/auth\";\nimport { auth, db } from \"../firebase\";\nimport { updateDoc, doc } from \"firebase/firestore\";\nimport { useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = () => {\n  _s();\n\n  const [data, setData] = useState({\n    email: \"\",\n    password: \"\",\n    error: null,\n    loading: false\n  });\n  const history = useHistory();\n  const {\n    email,\n    password,\n    error,\n    loading\n  } = data;\n\n  const handleChange = e => {\n    setData({ ...data,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setData({ ...data,\n      error: null,\n      loading: true\n    });\n\n    if (!email || !password) {\n      setData({ ...data,\n        error: \"All fields are required\"\n      });\n    }\n\n    try {\n      const result = await signInWithEmailAndPassword(auth, email, password);\n      await updateDoc(doc(db, \"users\", result.user.uid), {\n        isOnline: true\n      });\n      setData({\n        email: \"\",\n        password: \"\",\n        error: null,\n        loading: false\n      });\n      history.replace(\"/\");\n    } catch (err) {\n      console.log(err);\n      setData({ ...data,\n        error: err.message,\n        loading: false\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Log into your Account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input_container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"email\",\n          value: email,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input_container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          value: password,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), error ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 18\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"btn_container\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn\",\n          disabled: loading,\n          children: loading ? \"Logging in ...\" : \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"Dpp5Z71kHPDjq9PBnI80cL/SjWo=\", false, function () {\n  return [useHistory];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/home/mindbowser/Firebase-Demo/firebase-demo/React-firestore-chat-app/src/pages/Login.js"],"names":["React","useState","signInWithEmailAndPassword","auth","db","updateDoc","doc","useHistory","Login","data","setData","email","password","error","loading","history","handleChange","e","target","name","value","handleSubmit","preventDefault","result","user","uid","isOnline","replace","err","console","log","message"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { signInWithEmailAndPassword } from \"firebase/auth\";\nimport { auth, db } from \"../firebase\";\nimport { updateDoc, doc } from \"firebase/firestore\";\nimport { useHistory } from \"react-router-dom\";\n\nconst Login = () => {\n  const [data, setData] = useState({\n    email: \"\",\n    password: \"\",\n    error: null,\n    loading: false,\n  });\n\n  const history = useHistory();\n\n  const { email, password, error, loading } = data;\n\n  const handleChange = e => {\n    setData({ ...data, [e.target.name]: e.target.value });\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setData({ ...data, error: null, loading: true });\n    if (!email || !password) {\n      setData({ ...data, error: \"All fields are required\" });\n    }\n    try {\n      const result = await signInWithEmailAndPassword(auth, email, password);\n\n      await updateDoc(doc(db, \"users\", result.user.uid), {\n        isOnline: true,\n      });\n      setData({\n        email: \"\",\n        password: \"\",\n        error: null,\n        loading: false,\n      });\n      history.replace(\"/\");\n    } catch (err) {\n      console.log(err);\n      setData({ ...data, error: err.message, loading: false });\n    }\n  };\n  return (\n    <section>\n      <h3>Log into your Account</h3>\n      <form className=\"form\" onSubmit={handleSubmit}>\n        <div className=\"input_container\">\n          <label htmlFor=\"email\">Email</label>\n          <input\n            type=\"text\"\n            name=\"email\"\n            value={email}\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"input_container\">\n          <label htmlFor=\"password\">Password</label>\n          <input\n            type=\"password\"\n            name=\"password\"\n            value={password}\n            onChange={handleChange}\n          />\n        </div>\n        {error ? <p className=\"error\">{error}</p> : null}\n        <div className=\"btn_container\">\n          <button className=\"btn\" disabled={loading}>\n            {loading ? \"Logging in ...\" : \"Login\"}\n          </button>\n        </div>\n      </form>\n    </section>\n  );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}